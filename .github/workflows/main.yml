name: Build & Deploy

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout master
        uses: actions/checkout@v2

      - name: initialize node
        uses: actions/setup-node@v2

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # - name: install dependencies
      #   run: yarn install

      - name: build ui
        run: yarn ui:build

      - name: deploy ui
        run: yarn ui:deploy

      - name: publish to heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        if: github.ref == 'refs/heads/master' && job.status == 'success'
        run: git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git origin/master:master

      # - uses: AkhileshNS/heroku-deploy@v3.10.9
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
      #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
